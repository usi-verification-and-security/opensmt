(set-option :produce-unsat-cores true)
(set-logic QF_UF)
(declare-sort I 0)
(declare-fun op (I I) I)
(declare-fun e4 () I)
(declare-fun e3 () I)
(declare-fun e2 () I)
(declare-fun e1 () I)
(declare-fun e0 () I)
(assert (! (let ((l1 (op e1 e1))) (let ((l2 (op e1 e0))) (let ((l3 (op e0 e1))) (let ((l4 (op e0 e0))) (let ((l5 (op e2 e1))) (let ((l6 (op e2 e0))) (let ((l7 (op e1 e2))) (let ((l8 (op e0 e2))) (let ((l9 (op e3 e1))) (let ((l10 (op e3 e0))) (let ((l11 (op e2 e2))) (let ((l12 (op e1 e3))) (let ((l13 (op e0 e3))) (let ((l14 (op e4 e1))) (let ((l15 (op e4 e0))) (let ((l16 (op e3 e2))) (let ((l17 (op e2 e3))) (let ((l18 (op e1 e4))) (let ((l19 (op e0 e4))) (let ((l20 (op e4 e2))) (let ((l21 (op e3 e3))) (let ((l22 (op e2 e4))) (let ((l23 (op e4 e3))) (let ((l24 (op e3 e4))) (let ((l25 (op e4 e4))) (and (or (= e4 l25) (= e3 l25) (= e2 l25) (= e0 l25) (= e1 l25)) (or (= e4 l24) (= e3 l24) (= e2 l24) (= e0 l24) (= e1 l24)) (or (= e4 l23) (= e3 l23) (= e2 l23) (= e0 l23) (= e1 l23)) (or (= e4 l22) (= e3 l22) (= e2 l22) (= e0 l22) (= e1 l22)) (or (= e4 l21) (= e3 l21) (= e2 l21) (= e0 l21) (= e1 l21)) (or (= e4 l20) (= e3 l20) (= e2 l20) (= e0 l20) (= e1 l20)) (or (= e4 l19) (= e3 l19) (= e2 l19) (= e0 l19) (= e1 l19)) (or (= e4 l18) (= e3 l18) (= e2 l18) (= e0 l18) (= e1 l18)) (or (= e4 l17) (= e3 l17) (= e2 l17) (= e0 l17) (= e1 l17)) (or (= e4 l16) (= e3 l16) (= e2 l16) (= e0 l16) (= e1 l16)) (or (= e4 l15) (= e3 l15) (= e2 l15) (= e0 l15) (= e1 l15)) (or (= e4 l14) (= e3 l14) (= e2 l14) (= e0 l14) (= e1 l14)) (or (= e4 l13) (= e3 l13) (= e2 l13) (= e0 l13) (= e1 l13)) (or (= e4 l12) (= e3 l12) (= e2 l12) (= e0 l12) (= e1 l12)) (or (= e4 l11) (= e3 l11) (= e2 l11) (= e0 l11) (= e1 l11)) (or (= e4 l10) (= e3 l10) (= e2 l10) (= e0 l10) (= e1 l10)) (or (= e4 l9) (= e3 l9) (= e2 l9) (= e0 l9) (= e1 l9)) (or (= e4 l8) (= e3 l8) (= e2 l8) (= e0 l8) (= e1 l8)) (or (= e4 l7) (= e3 l7) (= e2 l7) (= e0 l7) (= e1 l7)) (or (= e4 l6) (= e3 l6) (= e2 l6) (= e0 l6) (= e1 l6)) (or (= e4 l5) (= e3 l5) (= e2 l5) (= e0 l5) (= e1 l5)) (or (= e4 l4) (= e3 l4) (= e2 l4) (= e0 l4) (= e1 l4)) (or (= e4 l3) (= e3 l3) (= e2 l3) (= e0 l3) (= e1 l3)) (or (= e4 l2) (= e3 l2) (= e2 l2) (= e0 l2) (= e1 l2)) (or (= e4 l1) (= e3 l1) (= e2 l1) (= e0 l1) (= e1 l1)))))))))))))))))))))))))))) :named smtcomp1))
(assert (! (let ((l1 (op e1 e1))) (let ((l2 (= e1 l1))) (let ((l3 (op e0 e1))) (let ((l4 (= e1 l3))) (let ((l5 (op e2 e1))) (let ((l6 (= e1 l5))) (let ((l7 (op e3 e1))) (let ((l8 (= e1 l7))) (let ((l9 (op e4 e1))) (let ((l10 (= e1 l9))) (let ((l11 (op e1 e0))) (let ((l12 (= e1 l11))) (let ((l13 (op e1 e2))) (let ((l14 (= e1 l13))) (let ((l15 (op e1 e3))) (let ((l16 (= e1 l15))) (let ((l17 (op e1 e4))) (let ((l18 (= e1 l17))) (let ((l19 (= e0 l1))) (let ((l20 (= e0 l3))) (let ((l21 (= e0 l5))) (let ((l22 (= e0 l7))) (let ((l23 (= e0 l9))) (let ((l24 (= e0 l11))) (let ((l25 (= e0 l13))) (let ((l26 (= e0 l15))) (let ((l27 (= e0 l17))) (let ((l28 (op e0 e0))) (let ((l29 (= e1 l28))) (let ((l30 (op e2 e0))) (let ((l31 (= e1 l30))) (let ((l32 (op e3 e0))) (let ((l33 (= e1 l32))) (let ((l34 (op e4 e0))) (let ((l35 (= e1 l34))) (let ((l36 (op e0 e2))) (let ((l37 (= e1 l36))) (let ((l38 (op e0 e3))) (let ((l39 (= e1 l38))) (let ((l40 (op e0 e4))) (let ((l41 (= e1 l40))) (let ((l42 (= e0 l28))) (let ((l43 (= e0 l30))) (let ((l44 (= e0 l32))) (let ((l45 (= e0 l34))) (let ((l46 (= e0 l36))) (let ((l47 (= e0 l38))) (let ((l48 (= e0 l40))) (let ((l49 (op e2 e2))) (let ((l50 (= e1 l49))) (let ((l51 (op e3 e2))) (let ((l52 (= e1 l51))) (let ((l53 (op e4 e2))) (let ((l54 (= e1 l53))) (let ((l55 (op e2 e3))) (let ((l56 (= e1 l55))) (let ((l57 (op e2 e4))) (let ((l58 (= e1 l57))) (let ((l59 (= e0 l49))) (let ((l60 (= e0 l51))) (let ((l61 (= e0 l53))) (let ((l62 (= e0 l55))) (let ((l63 (= e0 l57))) (let ((l64 (= e2 l1))) (let ((l65 (= e2 l3))) (let ((l66 (= e2 l5))) (let ((l67 (= e2 l7))) (let ((l68 (= e2 l9))) (let ((l69 (= e2 l11))) (let ((l70 (= e2 l13))) (let ((l71 (= e2 l15))) (let ((l72 (= e2 l17))) (let ((l73 (= e2 l28))) (let ((l74 (= e2 l30))) (let ((l75 (= e2 l32))) (let ((l76 (= e2 l34))) (let ((l77 (= e2 l36))) (let ((l78 (= e2 l38))) (let ((l79 (= e2 l40))) (let ((l80 (op e3 e3))) (let ((l81 (= e1 l80))) (let ((l82 (op e4 e3))) (let ((l83 (= e1 l82))) (let ((l84 (op e3 e4))) (let ((l85 (= e1 l84))) (let ((l86 (= e0 l80))) (let ((l87 (= e0 l82))) (let ((l88 (= e0 l84))) (let ((l89 (= e2 l49))) (let ((l90 (= e2 l51))) (let ((l91 (= e2 l53))) (let ((l92 (= e2 l55))) (let ((l93 (= e2 l57))) (let ((l94 (= e3 l1))) (let ((l95 (= e3 l3))) (let ((l96 (= e3 l5))) (let ((l97 (= e3 l7))) (let ((l98 (= e3 l9))) (let ((l99 (= e3 l11))) (let ((l100 (= e3 l13))) (let ((l101 (= e3 l15))) (let ((l102 (= e3 l17))) (let ((l103 (= e3 l28))) (let ((l104 (= e3 l30))) (let ((l105 (= e3 l32))) (let ((l106 (= e3 l34))) (let ((l107 (= e3 l36))) (let ((l108 (= e3 l38))) (let ((l109 (= e3 l40))) (let ((l110 (op e4 e4))) (let ((l111 (= e1 l110))) (let ((l112 (= e0 l110))) (let ((l113 (= e2 l80))) (let ((l114 (= e2 l82))) (let ((l115 (= e2 l84))) (let ((l116 (= e3 l49))) (let ((l117 (= e3 l51))) (let ((l118 (= e3 l53))) (let ((l119 (= e3 l55))) (let ((l120 (= e3 l57))) (let ((l121 (= e4 l1))) (let ((l122 (= e4 l3))) (let ((l123 (= e4 l5))) (let ((l124 (= e4 l7))) (let ((l125 (= e4 l9))) (let ((l126 (= e4 l11))) (let ((l127 (= e4 l13))) (let ((l128 (= e4 l15))) (let ((l129 (= e4 l17))) (let ((l130 (= e4 l28))) (let ((l131 (= e4 l30))) (let ((l132 (= e4 l32))) (let ((l133 (= e4 l34))) (let ((l134 (= e4 l36))) (let ((l135 (= e4 l38))) (let ((l136 (= e4 l40))) (let ((l137 (= e2 l110))) (let ((l138 (= e3 l80))) (let ((l139 (= e3 l82))) (let ((l140 (= e3 l84))) (let ((l141 (= e4 l49))) (let ((l142 (= e4 l51))) (let ((l143 (= e4 l53))) (let ((l144 (= e4 l55))) (let ((l145 (= e4 l57))) (let ((l146 (= e3 l110))) (let ((l147 (= e4 l80))) (let ((l148 (= e4 l82))) (let ((l149 (= e4 l84))) (let ((l150 (= e4 l110))) (and (or l150 l148 l143 l133 l125) (or l150 l149 l145 l136 l129) (or l149 l147 l142 l132 l124) (or l148 l147 l144 l135 l128) (or l146 l139 l118 l106 l98) (or l146 l140 l120 l109 l102) (or l145 l144 l141 l131 l123) (or l143 l142 l141 l134 l127) (or l140 l138 l117 l105 l97) (or l139 l138 l119 l108 l101) (or l137 l114 l91 l76 l68) (or l137 l115 l93 l79 l72) (or l136 l135 l134 l130 l122) (or l133 l132 l131 l130 l126) (or l129 l128 l127 l126 l121) (or l125 l124 l123 l122 l121) (or l120 l119 l116 l104 l96) (or l118 l117 l116 l107 l100) (or l115 l113 l90 l75 l67) (or l114 l113 l92 l78 l71) (or l112 l87 l61 l45 l23) (or l112 l88 l63 l48 l27) (or l111 l83 l54 l35 l10) (or l111 l85 l58 l41 l18) (or l109 l108 l107 l103 l95) (or l106 l105 l104 l103 l99) (or l102 l101 l100 l99 l94) (or l98 l97 l96 l95 l94) (or l93 l92 l89 l74 l66) (or l91 l90 l89 l77 l70) (or l88 l86 l60 l44 l22) (or l87 l86 l62 l47 l26) (or l85 l81 l52 l33 l8) (or l83 l81 l56 l39 l16) (or l79 l78 l77 l73 l65) (or l76 l75 l74 l73 l69) (or l72 l71 l70 l69 l64) (or l68 l67 l66 l65 l64) (or l63 l62 l59 l43 l21) (or l61 l60 l59 l46 l25) (or l58 l56 l50 l31 l6) (or l54 l52 l50 l37 l14) (or l48 l47 l46 l42 l20) (or l45 l44 l43 l42 l24) (or l41 l39 l37 l29 l4) (or l35 l33 l31 l29 l12) (or l27 l26 l25 l24 l19) (or l23 l22 l21 l20 l19) (or l18 l16 l14 l12 l2) (or l10 l8 l6 l4 l2)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :named smtcomp2))
(assert (! (let ((l1 (op e1 e1))) (let ((l2 (op e0 e0))) (let ((l3 (op e2 e2))) (let ((l4 (op e3 e3))) (let ((l5 (op e4 e4))) (or (and (not (= e4 l5)) (not (= e4 l4)) (not (= e4 l3)) (not (= e4 l2)) (not (= e4 l1))) (and (not (= e3 l5)) (not (= e3 l4)) (not (= e3 l3)) (not (= e3 l2)) (not (= e3 l1))) (and (not (= e2 l5)) (not (= e2 l4)) (not (= e2 l3)) (not (= e2 l2)) (not (= e2 l1))) (and (not (= e0 l5)) (not (= e0 l4)) (not (= e0 l3)) (not (= e0 l2)) (not (= e0 l1))) (and (not (= e1 l5)) (not (= e1 l4)) (not (= e1 l3)) (not (= e1 l2)) (not (= e1 l1))))))))) :named smtcomp3))
(assert (! (let ((l1 (op e1 e1))) (let ((l2 (op e0 e1))) (let ((l3 (not (= e1 l2)))) (let ((l4 (op e1 e0))) (let ((l5 (not (= e1 l4)))) (let ((l6 (op e0 e0))) (let ((l7 (op e1 e2))) (let ((l8 (not (= e1 l7)))) (let ((l9 (op e2 e1))) (let ((l10 (not (= e1 l9)))) (let ((l11 (op e0 e2))) (let ((l12 (not (= e1 l11)))) (let ((l13 (op e2 e0))) (let ((l14 (not (= e1 l13)))) (let ((l15 (op e1 e3))) (let ((l16 (not (= e1 l15)))) (let ((l17 (op e3 e1))) (let ((l18 (not (= e1 l17)))) (let ((l19 (op e0 e3))) (let ((l20 (not (= e1 l19)))) (let ((l21 (op e3 e0))) (let ((l22 (not (= e1 l21)))) (let ((l23 (op e2 e2))) (let ((l24 (op e1 e4))) (let ((l25 (not (= e1 l24)))) (let ((l26 (op e4 e1))) (let ((l27 (not (= e1 l26)))) (let ((l28 (op e0 e4))) (let ((l29 (not (= e1 l28)))) (let ((l30 (op e4 e0))) (let ((l31 (not (= e1 l30)))) (let ((l32 (op e2 e3))) (let ((l33 (not (= e1 l32)))) (let ((l34 (op e3 e2))) (let ((l35 (not (= e1 l34)))) (let ((l36 (op e2 e4))) (let ((l37 (not (= e1 l36)))) (let ((l38 (op e4 e2))) (let ((l39 (not (= e1 l38)))) (let ((l40 (op e3 e3))) (let ((l41 (op e3 e4))) (let ((l42 (not (= e1 l41)))) (let ((l43 (op e4 e3))) (let ((l44 (not (= e1 l43)))) (let ((l45 (op e4 e4))) (let ((l46 (not (= e0 l2)))) (let ((l47 (not (= e0 l4)))) (let ((l48 (not (= e0 l7)))) (let ((l49 (not (= e0 l9)))) (let ((l50 (not (= e0 l11)))) (let ((l51 (not (= e0 l13)))) (let ((l52 (not (= e0 l15)))) (let ((l53 (not (= e0 l17)))) (let ((l54 (not (= e0 l19)))) (let ((l55 (not (= e0 l21)))) (let ((l56 (not (= e0 l24)))) (let ((l57 (not (= e0 l26)))) (let ((l58 (not (= e0 l28)))) (let ((l59 (not (= e0 l30)))) (let ((l60 (not (= e0 l32)))) (let ((l61 (not (= e0 l34)))) (let ((l62 (not (= e0 l36)))) (let ((l63 (not (= e0 l38)))) (let ((l64 (not (= e0 l41)))) (let ((l65 (not (= e0 l43)))) (let ((l66 (not (= e2 l2)))) (let ((l67 (not (= e2 l4)))) (let ((l68 (not (= e2 l7)))) (let ((l69 (not (= e2 l9)))) (let ((l70 (not (= e2 l11)))) (let ((l71 (not (= e2 l13)))) (let ((l72 (not (= e2 l15)))) (let ((l73 (not (= e2 l17)))) (let ((l74 (not (= e2 l19)))) (let ((l75 (not (= e2 l21)))) (let ((l76 (not (= e2 l24)))) (let ((l77 (not (= e2 l26)))) (let ((l78 (not (= e2 l28)))) (let ((l79 (not (= e2 l30)))) (let ((l80 (not (= e2 l32)))) (let ((l81 (not (= e2 l34)))) (let ((l82 (not (= e2 l36)))) (let ((l83 (not (= e2 l38)))) (let ((l84 (not (= e2 l41)))) (let ((l85 (not (= e2 l43)))) (let ((l86 (not (= e3 l2)))) (let ((l87 (not (= e3 l4)))) (let ((l88 (not (= e3 l7)))) (let ((l89 (not (= e3 l9)))) (let ((l90 (not (= e3 l11)))) (let ((l91 (not (= e3 l13)))) (let ((l92 (not (= e3 l15)))) (let ((l93 (not (= e3 l17)))) (let ((l94 (not (= e3 l19)))) (let ((l95 (not (= e3 l21)))) (let ((l96 (not (= e3 l24)))) (let ((l97 (not (= e3 l26)))) (let ((l98 (not (= e3 l28)))) (let ((l99 (not (= e3 l30)))) (let ((l100 (not (= e3 l32)))) (let ((l101 (not (= e3 l34)))) (let ((l102 (not (= e3 l36)))) (let ((l103 (not (= e3 l38)))) (let ((l104 (not (= e3 l41)))) (let ((l105 (not (= e3 l43)))) (let ((l106 (not (= e4 l2)))) (let ((l107 (not (= e4 l4)))) (let ((l108 (not (= e4 l7)))) (let ((l109 (not (= e4 l9)))) (let ((l110 (not (= e4 l11)))) (let ((l111 (not (= e4 l13)))) (let ((l112 (not (= e4 l15)))) (let ((l113 (not (= e4 l17)))) (let ((l114 (not (= e4 l19)))) (let ((l115 (not (= e4 l21)))) (let ((l116 (not (= e4 l24)))) (let ((l117 (not (= e4 l26)))) (let ((l118 (not (= e4 l28)))) (let ((l119 (not (= e4 l30)))) (let ((l120 (not (= e4 l32)))) (let ((l121 (not (= e4 l34)))) (let ((l122 (not (= e4 l36)))) (let ((l123 (not (= e4 l38)))) (let ((l124 (not (= e4 l41)))) (let ((l125 (not (= e4 l43)))) (or (and (not (= e4 l45)) (or l124 l125) (or l125 l124) (or l122 l123) (not (= e4 l40)) (or l123 l122) (or l118 l119) (or l116 l117) (or l120 l121) (or l121 l120) (or l119 l118) (or l117 l116) (or l114 l115) (or l112 l113) (not (= e4 l23)) (or l115 l114) (or l113 l112) (or l110 l111) (or l108 l109) (or l111 l110) (or l109 l108) (not (= e4 l6)) (or l106 l107) (or l107 l106) (not (= e4 l1))) (and (not (= e3 l45)) (or l104 l105) (or l105 l104) (or l102 l103) (not (= e3 l40)) (or l103 l102) (or l98 l99) (or l96 l97) (or l100 l101) (or l101 l100) (or l99 l98) (or l97 l96) (or l94 l95) (or l92 l93) (not (= e3 l23)) (or l95 l94) (or l93 l92) (or l90 l91) (or l88 l89) (or l91 l90) (or l89 l88) (not (= e3 l6)) (or l86 l87) (or l87 l86) (not (= e3 l1))) (and (not (= e2 l45)) (or l84 l85) (or l85 l84) (or l82 l83) (not (= e2 l40)) (or l83 l82) (or l78 l79) (or l76 l77) (or l80 l81) (or l81 l80) (or l79 l78) (or l77 l76) (or l74 l75) (or l72 l73) (not (= e2 l23)) (or l75 l74) (or l73 l72) (or l70 l71) (or l68 l69) (or l71 l70) (or l69 l68) (not (= e2 l6)) (or l66 l67) (or l67 l66) (not (= e2 l1))) (and (not (= e0 l45)) (or l64 l65) (or l65 l64) (or l62 l63) (not (= e0 l40)) (or l63 l62) (or l58 l59) (or l56 l57) (or l60 l61) (or l61 l60) (or l59 l58) (or l57 l56) (or l54 l55) (or l52 l53) (not (= e0 l23)) (or l55 l54) (or l53 l52) (or l50 l51) (or l48 l49) (or l51 l50) (or l49 l48) (not (= e0 l6)) (or l46 l47) (or l47 l46) (not (= e0 l1))) (and (not (= e1 l45)) (or l42 l44) (or l44 l42) (or l37 l39) (not (= e1 l40)) (or l39 l37) (or l29 l31) (or l25 l27) (or l33 l35) (or l35 l33) (or l31 l29) (or l27 l25) (or l20 l22) (or l16 l18) (not (= e1 l23)) (or l22 l20) (or l18 l16) (or l12 l14) (or l8 l10) (or l14 l12) (or l10 l8) (not (= e1 l6)) (or l3 l5) (or l5 l3) (not (= e1 l1))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :named smtcomp4))
(assert (! (and (not (= e4 (op e4 e4))) (not (= e3 (op e3 e3))) (not (= e2 (op e2 e2))) (not (= e0 (op e0 e0))) (not (= e1 (op e1 e1)))) :named smtcomp5))
(assert (! (or (and (not (= e4 (op e4 (op e4 e4)))) (not (= e3 (op e4 (op e4 e3)))) (not (= e2 (op e4 (op e4 e2)))) (not (= e0 (op e4 (op e4 e0)))) (not (= e1 (op e4 (op e4 e1))))) (and (not (= e4 (op e3 (op e3 e4)))) (not (= e3 (op e3 (op e3 e3)))) (not (= e2 (op e3 (op e3 e2)))) (not (= e0 (op e3 (op e3 e0)))) (not (= e1 (op e3 (op e3 e1))))) (and (not (= e4 (op e2 (op e2 e4)))) (not (= e3 (op e2 (op e2 e3)))) (not (= e2 (op e2 (op e2 e2)))) (not (= e0 (op e2 (op e2 e0)))) (not (= e1 (op e2 (op e2 e1))))) (and (not (= e4 (op e0 (op e0 e4)))) (not (= e3 (op e0 (op e0 e3)))) (not (= e2 (op e0 (op e0 e2)))) (not (= e0 (op e0 (op e0 e0)))) (not (= e1 (op e0 (op e0 e1))))) (and (not (= e4 (op e1 (op e1 e4)))) (not (= e3 (op e1 (op e1 e3)))) (not (= e2 (op e1 (op e1 e2)))) (not (= e0 (op e1 (op e1 e0)))) (not (= e1 (op e1 (op e1 e1)))))) :named smtcomp6))
(assert (! (let ((l1 (op e1 e1))) (let ((l2 (op e0 e0))) (let ((l3 (op e2 e2))) (let ((l4 (op e3 e3))) (let ((l5 (op e4 e4))) (or (= e4 (op l5 l5)) (= e3 (op l4 l4)) (= e2 (op l3 l3)) (= e0 (op l2 l2)) (= e1 (op l1 l1)))))))) :named smtcomp7))
(assert (! (and (not (= e4 (op (op e4 e4) e4))) (not (= e3 (op (op e3 e3) e3))) (not (= e2 (op (op e2 e2) e2))) (not (= e0 (op (op e0 e0) e0))) (not (= e1 (op (op e1 e1) e1)))) :named smtcomp8))
(assert (! (let ((l1 (op e0 e1))) (let ((l2 (op e1 e0))) (let ((l3 (op e1 e2))) (let ((l4 (op e2 e1))) (let ((l5 (op e0 e2))) (let ((l6 (op e2 e0))) (let ((l7 (op e1 e3))) (let ((l8 (op e3 e1))) (let ((l9 (op e0 e3))) (let ((l10 (op e3 e0))) (let ((l11 (op e1 e4))) (let ((l12 (op e4 e1))) (let ((l13 (op e0 e4))) (let ((l14 (op e4 e0))) (let ((l15 (op e2 e3))) (let ((l16 (op e3 e2))) (let ((l17 (op e2 e4))) (let ((l18 (op e4 e2))) (let ((l19 (op e3 e4))) (let ((l20 (op e4 e3))) (or (= e4 (op e4 e4)) (and (= e3 l19) (= e3 l20)) (and (= e4 l20) (= e4 l19)) (and (= e2 l17) (= e2 l18)) (= e3 (op e3 e3)) (and (= e4 l18) (= e4 l17)) (and (= e0 l13) (= e0 l14)) (and (= e1 l11) (= e1 l12)) (and (= e2 l15) (= e2 l16)) (and (= e3 l16) (= e3 l15)) (and (= e4 l14) (= e4 l13)) (and (= e4 l12) (= e4 l11)) (and (= e0 l9) (= e0 l10)) (and (= e1 l7) (= e1 l8)) (= e2 (op e2 e2)) (and (= e3 l10) (= e3 l9)) (and (= e3 l8) (= e3 l7)) (and (= e0 l5) (= e0 l6)) (and (= e1 l3) (= e1 l4)) (and (= e2 l6) (= e2 l5)) (and (= e2 l4) (= e2 l3)) (= e0 (op e0 e0)) (and (= e0 l1) (= e0 l2)) (and (= e1 l2) (= e1 l1)) (= e1 (op e1 e1))))))))))))))))))))))) :named smtcomp9))
(assert (! (let ((l1 (op e1 e1))) (let ((l2 (op e1 e0))) (let ((l3 (op e1 e2))) (let ((l4 (op e1 e3))) (let ((l5 (op e1 e4))) (let ((l6 (op e0 e1))) (let ((l7 (op e0 e0))) (let ((l8 (op e0 e2))) (let ((l9 (op e0 e3))) (let ((l10 (op e0 e4))) (let ((l11 (op e2 e1))) (let ((l12 (op e2 e0))) (let ((l13 (op e2 e2))) (let ((l14 (op e2 e3))) (let ((l15 (op e2 e4))) (let ((l16 (op e3 e1))) (let ((l17 (op e3 e0))) (let ((l18 (op e3 e2))) (let ((l19 (op e3 e3))) (let ((l20 (op e3 e4))) (let ((l21 (op e4 e1))) (let ((l22 (op e4 e0))) (let ((l23 (op e4 e2))) (let ((l24 (op e4 e3))) (let ((l25 (op e4 e4))) (or (and (not (= e4 (op l25 l25))) (not (= e3 (op l24 l24))) (not (= e2 (op l23 l23))) (not (= e0 (op l22 l22))) (not (= e1 (op l21 l21)))) (and (not (= e4 (op l20 l20))) (not (= e3 (op l19 l19))) (not (= e2 (op l18 l18))) (not (= e0 (op l17 l17))) (not (= e1 (op l16 l16)))) (and (not (= e4 (op l15 l15))) (not (= e3 (op l14 l14))) (not (= e2 (op l13 l13))) (not (= e0 (op l12 l12))) (not (= e1 (op l11 l11)))) (and (not (= e4 (op l10 l10))) (not (= e3 (op l9 l9))) (not (= e2 (op l8 l8))) (not (= e0 (op l7 l7))) (not (= e1 (op l6 l6)))) (and (not (= e4 (op l5 l5))) (not (= e3 (op l4 l4))) (not (= e2 (op l3 l3))) (not (= e0 (op l2 l2))) (not (= e1 (op l1 l1)))))))))))))))))))))))))))))) :named smtcomp10))
(assert (! (or (and (not (= e4 (op e4 (op e4 e4)))) (not (= e4 (op e3 (op e4 e3)))) (not (= e4 (op e2 (op e4 e2)))) (not (= e4 (op e0 (op e4 e0)))) (not (= e4 (op e1 (op e4 e1))))) (and (not (= e3 (op e4 (op e3 e4)))) (not (= e3 (op e3 (op e3 e3)))) (not (= e3 (op e2 (op e3 e2)))) (not (= e3 (op e0 (op e3 e0)))) (not (= e3 (op e1 (op e3 e1))))) (and (not (= e2 (op e4 (op e2 e4)))) (not (= e2 (op e3 (op e2 e3)))) (not (= e2 (op e2 (op e2 e2)))) (not (= e2 (op e0 (op e2 e0)))) (not (= e2 (op e1 (op e2 e1))))) (and (not (= e0 (op e4 (op e0 e4)))) (not (= e0 (op e3 (op e0 e3)))) (not (= e0 (op e2 (op e0 e2)))) (not (= e0 (op e0 (op e0 e0)))) (not (= e0 (op e1 (op e0 e1))))) (and (not (= e1 (op e4 (op e1 e4)))) (not (= e1 (op e3 (op e1 e3)))) (not (= e1 (op e2 (op e1 e2)))) (not (= e1 (op e0 (op e1 e0)))) (not (= e1 (op e1 (op e1 e1)))))) :named smtcomp11))
(assert (! (let ((l1 (op e1 e1))) (let ((l2 (= e1 l1))) (let ((l3 (op e0 e1))) (let ((l4 (= e0 l3))) (let ((l5 (op e1 e0))) (let ((l6 (= e1 l5))) (let ((l7 (op e0 e0))) (let ((l8 (= e0 l7))) (let ((l9 (op e1 e2))) (let ((l10 (= e1 l9))) (let ((l11 (op e2 e1))) (let ((l12 (op e0 e2))) (let ((l13 (= e0 l12))) (let ((l14 (op e2 e0))) (let ((l15 (= e2 l11))) (let ((l16 (= e2 l14))) (let ((l17 (op e1 e3))) (let ((l18 (= e1 l17))) (let ((l19 (op e3 e1))) (let ((l20 (op e0 e3))) (let ((l21 (= e0 l20))) (let ((l22 (op e3 e0))) (let ((l23 (op e2 e2))) (let ((l24 (= e2 l23))) (let ((l25 (= e3 l19))) (let ((l26 (= e3 l22))) (let ((l27 (op e1 e4))) (let ((l28 (= e1 l27))) (let ((l29 (op e4 e1))) (let ((l30 (op e0 e4))) (let ((l31 (= e0 l30))) (let ((l32 (op e4 e0))) (let ((l33 (op e2 e3))) (let ((l34 (= e2 l33))) (let ((l35 (op e3 e2))) (let ((l36 (= e3 l35))) (let ((l37 (= e4 l29))) (let ((l38 (= e4 l32))) (let ((l39 (op e2 e4))) (let ((l40 (= e2 l39))) (let ((l41 (op e4 e2))) (let ((l42 (op e3 e3))) (let ((l43 (= e3 l42))) (let ((l44 (= e4 l41))) (let ((l45 (op e3 e4))) (let ((l46 (= e3 l45))) (let ((l47 (op e4 e3))) (let ((l48 (= e4 l47))) (let ((l49 (op e4 e4))) (let ((l50 (= e4 l49))) (and (or l50 (and (= e4 l45) l48) (and l48 l46) (and (= e4 l39) l44) (and (= e4 l42) l43) (and l44 l40) (and (= e4 l30) l38) (and (= e4 l27) l37) (and (= e4 l33) l36) (and (= e4 l35) l34) (and l38 l31) (and l37 l28) (and (= e4 l20) l26) (and (= e4 l17) l25) (and (= e4 l23) l24) (and (= e4 l22) l21) (and (= e4 l19) l18) (and (= e4 l12) l16) (and (= e4 l9) l15) (and (= e4 l14) l13) (and (= e4 l11) l10) (and (= e4 l7) l8) (and (= e4 l3) l6) (and (= e4 l5) l4) (and (= e4 l1) l2)) (or (and (= e3 l49) l50) (and l46 l48) (and (= e3 l47) l46) (and (= e3 l39) l44) l43 (and (= e3 l41) l40) (and (= e3 l30) l38) (and (= e3 l27) l37) (and (= e3 l33) l36) (and l36 l34) (and (= e3 l32) l31) (and (= e3 l29) l28) (and (= e3 l20) l26) (and (= e3 l17) l25) (and (= e3 l23) l24) (and l26 l21) (and l25 l18) (and (= e3 l12) l16) (and (= e3 l9) l15) (and (= e3 l14) l13) (and (= e3 l11) l10) (and (= e3 l7) l8) (and (= e3 l3) l6) (and (= e3 l5) l4) (and (= e3 l1) l2)) (or (and (= e2 l49) l50) (and (= e2 l45) l48) (and (= e2 l47) l46) (and l40 l44) (and (= e2 l42) l43) (and (= e2 l41) l40) (and (= e2 l30) l38) (and (= e2 l27) l37) (and l34 l36) (and (= e2 l35) l34) (and (= e2 l32) l31) (and (= e2 l29) l28) (and (= e2 l20) l26) (and (= e2 l17) l25) l24 (and (= e2 l22) l21) (and (= e2 l19) l18) (and (= e2 l12) l16) (and (= e2 l9) l15) (and l16 l13) (and l15 l10) (and (= e2 l7) l8) (and (= e2 l3) l6) (and (= e2 l5) l4) (and (= e2 l1) l2)) (or (and (= e0 l49) l50) (and (= e0 l45) l48) (and (= e0 l47) l46) (and (= e0 l39) l44) (and (= e0 l42) l43) (and (= e0 l41) l40) (and l31 l38) (and (= e0 l27) l37) (and (= e0 l33) l36) (and (= e0 l35) l34) (and (= e0 l32) l31) (and (= e0 l29) l28) (and l21 l26) (and (= e0 l17) l25) (and (= e0 l23) l24) (and (= e0 l22) l21) (and (= e0 l19) l18) (and l13 l16) (and (= e0 l9) l15) (and (= e0 l14) l13) (and (= e0 l11) l10) l8 (and l4 l6) (and (= e0 l5) l4) (and (= e0 l1) l2)) (or (and (= e1 l49) l50) (and (= e1 l45) l48) (and (= e1 l47) l46) (and (= e1 l39) l44) (and (= e1 l42) l43) (and (= e1 l41) l40) (and (= e1 l30) l38) (and l28 l37) (and (= e1 l33) l36) (and (= e1 l35) l34) (and (= e1 l32) l31) (and (= e1 l29) l28) (and (= e1 l20) l26) (and l18 l25) (and (= e1 l23) l24) (and (= e1 l22) l21) (and (= e1 l19) l18) (and (= e1 l12) l16) (and l10 l15) (and (= e1 l14) l13) (and (= e1 l11) l10) (and (= e1 l7) l8) (and (= e1 l3) l6) (and l6 l4) l2)))))))))))))))))))))))))))))))))))))))))))))))))))) :named smtcomp12))
(assert (! (and (or (= e4 (op (op e4 e4) e4)) (= e3 (op (op e3 e4) e4)) (= e2 (op (op e2 e4) e4)) (= e0 (op (op e0 e4) e4)) (= e1 (op (op e1 e4) e4))) (or (= e4 (op (op e4 e3) e3)) (= e3 (op (op e3 e3) e3)) (= e2 (op (op e2 e3) e3)) (= e0 (op (op e0 e3) e3)) (= e1 (op (op e1 e3) e3))) (or (= e4 (op (op e4 e2) e2)) (= e3 (op (op e3 e2) e2)) (= e2 (op (op e2 e2) e2)) (= e0 (op (op e0 e2) e2)) (= e1 (op (op e1 e2) e2))) (or (= e4 (op (op e4 e0) e0)) (= e3 (op (op e3 e0) e0)) (= e2 (op (op e2 e0) e0)) (= e0 (op (op e0 e0) e0)) (= e1 (op (op e1 e0) e0))) (or (= e4 (op (op e4 e1) e1)) (= e3 (op (op e3 e1) e1)) (= e2 (op (op e2 e1) e1)) (= e0 (op (op e0 e1) e1)) (= e1 (op (op e1 e1) e1)))) :named smtcomp13))
(assert (! (let ((l1 (op e1 e2))) (let ((l2 (op e1 e0))) (let ((l3 (op e1 e1))) (let ((l4 (op e0 e2))) (let ((l5 (op e0 e0))) (let ((l6 (op e0 e1))) (let ((l7 (op e2 e1))) (let ((l8 (op e2 e0))) (let ((l9 (op e2 e2))) (let ((l10 (op e1 e3))) (let ((l11 (op e0 e3))) (let ((l12 (op e3 e1))) (let ((l13 (op e3 e0))) (let ((l14 (op e3 e2))) (let ((l15 (op e2 e3))) (let ((l16 (op e1 e4))) (let ((l17 (op e0 e4))) (let ((l18 (op e4 e1))) (let ((l19 (op e4 e0))) (let ((l20 (op e4 e2))) (let ((l21 (op e3 e3))) (let ((l22 (op e2 e4))) (let ((l23 (op e4 e3))) (let ((l24 (op e3 e4))) (let ((l25 (op e4 e4))) (and (not (= l24 l25)) (not (= l23 l25)) (not (= l21 l23)) (not (= l22 l25)) (not (= l21 l24)) (not (= l20 l25)) (not (= l14 l20)) (not (= l15 l23)) (not (= l22 l24)) (not (= l15 l22)) (not (= l14 l24)) (not (= l20 l23)) (not (= l13 l19)) (not (= l12 l18)) (not (= l9 l20)) (not (= l15 l21)) (not (= l16 l25)) (not (= l11 l17)) (not (= l10 l16)) (not (= l9 l22)) (not (= l14 l21)) (not (= l18 l25)) (not (= l8 l19)) (not (= l7 l18)) (not (= l9 l14)) (not (= l10 l23)) (not (= l16 l24)) (not (= l4 l17)) (not (= l1 l16)) (not (= l9 l15)) (not (= l12 l24)) (not (= l18 l23)) (not (= l8 l13)) (not (= l7 l12)) (not (= l1 l20)) (not (= l10 l21)) (not (= l16 l22)) (not (= l4 l11)) (not (= l1 l10)) (not (= l7 l22)) (not (= l12 l21)) (not (= l18 l20)) (not (= l2 l19)) (not (= l3 l18)) (not (= l1 l14)) (not (= l10 l15)) (not (= l17 l25)) (not (= l6 l17)) (not (= l3 l16)) (not (= l7 l15)) (not (= l12 l14)) (not (= l19 l25)) (not (= l2 l13)) (not (= l3 l12)) (not (= l1 l9)) (not (= l11 l23)) (not (= l17 l24)) (not (= l6 l11)) (not (= l3 l10)) (not (= l7 l9)) (not (= l13 l24)) (not (= l19 l23)) (not (= l2 l8)) (not (= l3 l7)) (not (= l4 l20)) (not (= l11 l21)) (not (= l17 l16)) (not (= l17 l22)) (not (= l6 l4)) (not (= l3 l1)) (not (= l8 l22)) (not (= l13 l21)) (not (= l19 l18)) (not (= l19 l20)) (not (= l5 l19)) (not (= l6 l18)) (not (= l4 l14)) (not (= l11 l10)) (not (= l11 l15)) (not (= l5 l17)) (not (= l2 l16)) (not (= l8 l15)) (not (= l13 l12)) (not (= l13 l14)) (not (= l5 l13)) (not (= l6 l12)) (not (= l4 l1)) (not (= l4 l9)) (not (= l5 l11)) (not (= l2 l10)) (not (= l8 l7)) (not (= l8 l9)) (not (= l5 l2)) (not (= l5 l8)) (not (= l6 l3)) (not (= l6 l7)) (not (= l5 l6)) (not (= l5 l4)) (not (= l2 l3)) (not (= l2 l1)))))))))))))))))))))))))))) :named smtcomp14))
(assert (! (and (not (= e4 e3)) (not (= e4 e2)) (not (= e3 e2)) (not (= e4 e1)) (not (= e3 e1)) (not (= e2 e1)) (not (= e4 e0)) (not (= e3 e0)) (not (= e1 e0)) (not (= e2 e0))) :named smtcomp15))
(assert (! (and (= e4 (op e3 e0)) (= e2 (op e0 e1)) (= e0 (op e3 e3)) (= e1 (op e0 e4))) :named smtcomp16))
(assert (! (not (and (= e0 (op e4 e4)) (= e1 (op e4 e3)) (= e3 (op e4 e2)) (= e4 (op e4 e1)) (= e2 (op e4 e0)) (= e2 (op e3 e4)) (= e0 (op e3 e3)) (= e1 (op e3 e2)) (= e3 (op e3 e1)) (= e4 (op e3 e0)) (= e3 (op e2 e4)) (= e2 (op e2 e3)) (= e4 (op e2 e2)) (= e1 (op e2 e1)) (= e0 (op e2 e0)) (= e4 (op e1 e4)) (= e3 (op e1 e3)) (= e2 (op e1 e2)) (= e0 (op e1 e1)) (= e1 (op e1 e0)) (= e1 (op e0 e4)) (= e4 (op e0 e3)) (= e0 (op e0 e2)) (= e3 (op e0 e0)) (= e2 (op e0 e1)))) :named smtcomp17))
(assert (! (not (and (= e3 (op e4 e4)) (= e1 (op e4 e3)) (= e4 (op e4 e2)) (= e0 (op e4 e1)) (= e2 (op e4 e0)) (= e2 (op e3 e4)) (= e0 (op e3 e3)) (= e1 (op e3 e2)) (= e3 (op e3 e1)) (= e4 (op e3 e0)) (= e4 (op e2 e4)) (= e2 (op e2 e3)) (= e3 (op e2 e2)) (= e1 (op e2 e1)) (= e0 (op e2 e0)) (= e0 (op e1 e4)) (= e3 (op e1 e3)) (= e2 (op e1 e2)) (= e4 (op e1 e1)) (= e1 (op e1 e0)) (= e1 (op e0 e4)) (= e4 (op e0 e3)) (= e0 (op e0 e2)) (= e3 (op e0 e0)) (= e2 (op e0 e1)))) :named smtcomp18))
(check-sat)
(get-unsat-core)
(exit)
